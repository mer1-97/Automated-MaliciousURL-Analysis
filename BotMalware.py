#!python3
#-*- coding: utf-8 -*-

from TelegramBot import TelegramBot
from MalwaresAnalyze import Malware

class BotMal(TelegramBot):
    def __init__(self):
        super().__init__('Malware Analyze Bot')
        self.date = ''
        self.count = ''
        self.result_msg = ''
        self.result_code = ''
        self.mal = Malware()

    def add_handler(self, cmd, func):
        self.updater.dispatcher.add_handler(self.commandHandler(cmd, func))

    def add_message_handler(self, func):
        self.updater.dispatcher.add_handler(func)

    def set_message(self, bot, update):
        self.proc_search(update.message.text)

    def proc_search(self, bot):
        if not any(x in bot for x in ('http:', 'https:')):
            self.send_message('[!] {} is not a URL.'.format(bot))
        else:
            self.count, self.date, self.result_code, self.result_msg = self.mal.url_analyze_info(bot)
            if self.count == '':
                self.send_message('[!] URL analysis failed')
                self.send_message('-> Result Code : {}\n-> Result Message : {}'.format(self.result_code,self.result_msg))
            else:
                self.send_message('[!] URL analysis results')
                self.send_message('-> Date : {}\n-> Malware : {}'.format(self.date,self.count))

    def proc_start(self):
        self.send_message('[!] Start {}..'.format(self.name))
        self.updater.start_polling()
        self.updater.idle()

    def loop(self):
        print('[!] Working..')
        self.add_message_handler(self.messageHandler(self.filters.text,self.set_message))
        self.proc_start()

def main():
    bot = BotMal()
    bot.loop()

if __name__ == '__main__':
    main()
